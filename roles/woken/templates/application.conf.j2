jobs {
  node = "{{ woken_node_name | default(inventory_hostname) }}"
  owner = "admin@mip.chuv.ch"
  chronosServerUrl = "{{ internal_chronos_url }}"
{% if woken_role == 'mip_federation' %}
{% else %}
  # TODO: connection to feature table should only be used for worker nodes
{% endif %}
  resultDb = "{{ woken_result_db_name }}"
  metaDb = "{{ woken_metadata_db_name }}"
  defaults {
    job {
      cpus = {{ woken_default_job_cpus }}
      memory = {{ woken_default_job_mem }}
    }
    features {
      database = "{{ woken_features_db_name }}"
      table = {
        schema = "public"
        name = "{{ woken_features_table }}"
      }
    }
  }
}

db {
  {{ woken_result_db_name }} {
    jdbc_driver = "{{ woken_result_db_jdbc_driver }}"
    jdbc_url = "{{ woken_result_db_jdbc_url }}"
    host = "{{ woken_result_db_host }}"
    port = {{ woken_result_db_port }}
    user = "{{ woken_result_db_user }}"
    password = "{{ woken_result_db_password }}"
    database = "{{ woken_result_db_name }}"
    schema = "public"
    pool_size = 5
  }

  {{ woken_features_db_name }} {
    jdbc_driver = "{{ woken_features_db_jdbc_driver }}"
    jdbc_url = "{{ woken_features_db_jdbc_url }}"
    host = "{{ woken_features_db_host }}"
    port = "{{ woken_features_db_port }}"
    user = "{{ woken_features_db_user }}"
    password = "{{ woken_features_db_password }}"
    database = "{{ woken_features_db_name }}"
    schema = "public"
    pool_size = 5

    tables {
    {% for t in woken_tables %}
      "{{ t.name }}" {
        primaryKey = [
          {% for pk in t.primaryKey %}
            {
              name = "{{ pk.name }}"
              sqlType = "{{ pk.sqlType }}"
            }
          {% endfor %}
        ]
        {% if t.datasetColumn is defined %}
          datasetColumn = {
            name = "{{ datasetColumn.name }}"
            sqlType = "{{ datasetColumn.sqlType }}"
          }
        {% endif %}
      }
    {% endfor %}
    }
  }

  {{ woken_metadata_db_name }} {
    jdbc_driver = "{{ woken_metadata_db_jdbc_driver }}"
    jdbc_url = "{{ woken_metadata_db_jdbc_url }}"
    host = "{{ woken_metadata_db_host }}"
    port = {{ woken_metadata_db_port }}
    user = "{{ woken_metadata_db_user }}"
    password = "{{ woken_metadata_db_password }}"
    database = "{{ woken_metadata_db_name }}"
    schema = "public"
    pool_size = 3
  }

}

datasets {
{% for fn in woken_datasets %}
  {{ fn.name }} {
    label = "{{ fn.label }}"
    description = "{{ fn.description }}"
{% if fn.tables is defined %}
    tables = {{ fn.tables | to_json }}
{% endif %}
    anonymisationLevel = "{{ fn.anonymisationLevel }}"
{% if fn.location is defined %}
    location {
      url = "{{ fn.location.url }}"
      basicAuth {
        user = "{{ fn.location.basicAuth.user }}"
        password = "{{ fn.location.basicAuth.password }}"
      }
    }
{% endif %}
  }
{% endfor %}
}

{% if woken_algorithms|length > 0 %}
algorithms {
{% for fn in woken_algorithms %}
  {{ fn.name }} = {
    dockerImage = "{{ fn.docker_image }}"
    predictive = {{ fn.predictive | lower }}
  }
{% endfor %}
}
{% endif %}

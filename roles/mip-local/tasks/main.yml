---

- name: Check that the server FQDN is reachable
  command: >
     ping -c 1 {{ server_fqdn }}

- name: Check that DNS for the local host is available inside VirtualBox
  wait_for:
    host: "{{ target_server }}"
    port: 22
    timeout: 3
  register: host_accessible
  failed_when: False
  when: ansible_virtualization_role == "guest" and ansible_virtualization_type == "virtualbox"

- name: Check if we need to add host and IP of the target server to Docker containers
  set_fact:
    docker_force_add_host: host_accessible.state is not defined or host_accessible.state != "started"
  when: ansible_virtualization_role == "guest" and ansible_virtualization_type == "virtualbox"

- name: Gather CPU and memory from target server
  set_fact:
    target_cpus: "{{ hostvars[target_server]['ansible_processor_vcpus'] }}"
    target_mem_mb: "{{ hostvars[target_server]['ansible_memtotal_mb'] }}"

- name: Create configuration directories
  file:
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ play_dir }}/envs/mip-local/etc/ansible/group_vars"
    - "{{ play_dir }}/envs/mip-local/etc/ansible/host_vars"

- name: Generate hosts file
  template:
    src: hosts.j2
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/hosts"

- name: Generate group_vars files
  template:
    src: "{{ item }}.j2"
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/group_vars/{{ item }}"
  with_items:
    - all
    - infrastructure

- name: Generate group_vars files for Reference databases
  template:
    src: "{{ item }}.j2"
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/group_vars/{{ item }}"
  with_items:
    - reference
  when: "'ref' in mip_building_blocks"

- name: Generate group_vars files for Algorithm Factory
  template:
    src: "{{ item }}.j2"
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/group_vars/{{ item }}"
  with_items:
    - algorithm-factory
  when: "'af' in mip_building_blocks"

- name: Generate group_vars files for Web Analytics
  template:
    src: "{{ item }}.j2"
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/group_vars/{{ item }}"
  with_items:
    - web-analytics
  when: "'wa' in mip_building_blocks"

- name: Generate group_vars files for Data Factory
  template:
    src: "{{ item }}.j2"
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/group_vars/{{ item }}"
  with_items:
    - data-factory
  when: "'df' in mip_building_blocks"

- name: Generate host_vars file
  template:
    src: "host_vars.j2"
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/host_vars/{{ target_server }}"

- name: Protect the variables in host_vars/ directory with git-crypt
  template:
    src: gitattributes.j2
    dest: "{{ play_dir }}/envs/mip-local/etc/ansible/.gitattributes"

- name: Generate setup.sh
  template:
    src: setup.sh.j2
    dest: "{{ play_dir }}/setup.sh"
    mode: "0750"

- name: Generate Slack notification
  template:
    src: slack.json.j2
    dest: "{{ play_dir }}/slack.json"

- name: Generate README
  template:
    src: README.md.j2
    dest: "{{ play_dir }}/README.md"

- name: Check for pre-commit
  stat:
    path: /usr/local/bin/pre-commit
  register: pre_commit_exe

- name: Remove pre-commit from after scripts if necessary
  lineinfile:
    path: "{{ item }}"
    regexp: "^pre-commit.*"
    state: absent
  with_items:
    - "{{ play_dir}}/after-git-clone.sh"
    - "{{ play_dir}}/after-update.sh"
  when: pre_commit_exe.stat.exists == False
